/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;




import Navigate.Bin;
import _Interfaces.NavEngine;
import _Interfaces.Selection;
import _Interfaces.Plan;
import _Interfaces.User;
import java.awt.Color;
import java.awt.Graphics;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Ryan
 */
public class PanelMap extends javax.swing.JPanel {

    private Plan            plan;   //floor plan of grocery store
    private NavEngine       nav;    //navigation for routes
    private User            user;                                          //change interface!!
    private String          directions; //describe what to do
    private List<Bin>       route;      //ordered list of bins (first to last)
    
    
    /**
     * Creates new form PanelNavMap
     * @param plan floor plan of store
     * @param nav navigation system for store
     * @param u user using the app
     */
    public PanelMap(Plan plan, NavEngine nav, User u) {
        
        initComponents();
        
        this.plan = plan;
        this.nav = nav;
        user = u;
        
        displayDirections();
    }
    
    /**
     * Paints the JPanel, the floor plan, and highlights the locations of Items in the User's cart.
     * @param g Graphics object on which objects are drawn.
     */
    @Override
    public void paintComponent(Graphics g)
    {
        super.paintComponent(g);
        plan.paint(g);  //floor plan
        highlightSelected(g);  //highlights specific bins
    }
    
    
    
    /**
     * Changes the color of bins in the store to indicate the locations of Items in the User's cart.
     * @param g Graphics object on which objects are drawn.
     */
    private void highlightSelected(Graphics g)
    {
        List<Selection> select = user.getCart().getSelected();                  
        
        //builds a list of bins from the list of selections in User's cart
        List<Bin> bins = new ArrayList<>();
        for(Selection s : select) //for each selection
        {
            bins.add(s.getItem().getBin()); //get the bin for that selection and add to bins
        }
        
        plan.highlightSelected(g, bins, Color.WHITE); //highlight all bins in the list
        
    }
    
    
    /**
     * Sets the text of listTextArea as a list of directions to pick up items in the most efficient (shortest) route.
     */
    private void displayDirections()
    {
        List<Selection> select = user.getCart().getSelected();                  
        
        //builds a list of bins from the list of selections in User's cart
        List<Bin> bins = new ArrayList<>();
        for(Selection s : select) //for each selection
        {
            bins.add(s.getItem().getBin()); //get the bin for that selection and add to bins
        }
        
        route = nav.fastestRoute(bins); //calculates route
        directions = nav.getDirections(route, select); //composes String of directions
        
        listTextArea.setText(directions); //updates listTextArea
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        listLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listTextArea = new javax.swing.JTextArea();
        saveJButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setMaximumSize(new java.awt.Dimension(1200, 625));
        setMinimumSize(new java.awt.Dimension(1200, 625));

        listLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        listLabel.setText("Shopping List");

        listTextArea.setEditable(false);
        listTextArea.setColumns(20);
        listTextArea.setRows(5);
        jScrollPane1.setViewportView(listTextArea);

        saveJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        saveJButton.setText("Save for Later");
        saveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJButtonActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        titleLabel.setText("Store Navigation");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1008, Short.MAX_VALUE)
                .addComponent(listLabel)
                .addGap(102, 102, 102))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveJButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleLabel)
                    .addComponent(listLabel))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveJButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser(); 
        
        // Set it to work with pre-defined file extention
        fileChooser.setFileFilter(new FileNameExtensionFilter(".txt", "txt"));
        
        int result = fileChooser.showSaveDialog(this); //popup window with save dialog
        
        //user can select an option: "Save", "Cancel" or hit the close button in the corner of the popup.
        if(result == JFileChooser.APPROVE_OPTION) // Only save the file if the correct option was chosen (i.e. 0)
        {
            try
            {
               
                boolean hasExtension = fileChooser.getSelectedFile().getName().endsWith(".txt"); //check if selected file ends with the correct file name extension
                
                FileOutputStream fos = new FileOutputStream(fileChooser.getSelectedFile() + (hasExtension ? "" : ".txt")); //create new file and add extension if it doesn't
                
                PrintStream ps = new PrintStream(fos);
                
                ps.print(directions); //print the directions to the file
                 
                ps.close(); // close stream to save file 
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, "Error: " + e); // Pop up a message if something goes horribly wrong. 
            }  
        }
        
       
    }//GEN-LAST:event_saveJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel listLabel;
    private javax.swing.JTextArea listTextArea;
    private javax.swing.JButton saveJButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

}
